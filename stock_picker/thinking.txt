"Implement a method #stock_picker that takes in an array of stock prices, one for each hypothetical day. It should return a pair of days representing the best day to buy and the best day to sell. Days start at 0.
	> stock_picker([17,3,6,9,15,8,6,1,10])
	=> [1,4]  # for a profit of $15 - $3 == $12
Quick Tips:
	You need to buy before you can sell
	Pay attention to edge cases like when the lowest day is the last day or the highest day is the first day."

--- --- ---

"find the greatest difference when moving left to right"
[17,3,6,9,15,8,6,1,10]
[17,3,6,9,1,10,6,8,15]
need to carry current lowest value/position and current greatest difference/positions.
{ lowest => position }
{ low => position, high => position , diff => integer}
each:
	if current-lowest is greater than diff, assign lowest as low, current as high, reeval diff
	else if current-low is greater than known diff, assign current to high
	regardless:	if current is lower than lowest, assign to lowest
		placement of this doesn't matter. the other two are if current is high, this is for if current is low.
		
	else... is that it? seems to be it...
	
don't feel like writing out a user input for an array.
get input, check for integer, convert to integer, add to array, assign a certain key when input to end input loop before sending it to sorter. something like that.

--- --- ---

[6]: ruby appears to not allow whitespace in definition of symbol hashes.

this is what i wanted, but is not allowed.
   known = {
      low_value		: array[0],
      low_position	: 0,
      high_value		: array[0],
      high_position	: 0,
      difference		: 0,
   }

this is allowed, but wouldn't be symbols:
   known = {
      "low_value"		=> array[0]
      "low_position"	=> 0,
      "high_value"	=> array[0],
      "high_position"=> 0,
      "difference"	=> 0,
   }